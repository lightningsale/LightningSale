{% extends 'base.html.twig' %}

{% block body %}
    <div class="container">
        <div class="row card-deck">
                <div class="card">
                    <div class="card-header">Channels</div>
                    <div class="card-body">
                        <canvas id="channel-chart"></canvas>
                    </div>
                    <div class="card-text">
                        <a href="#" class="btn btn-link">Details</a>
                        <a href="#" class="btn btn-link">New</a>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header">Wallet</div>
                    <table class="table card-body" style="table-layout: fixed; width: 100%;">
                        <tbody>
                        <tr>
                            <td>Confirmed</td>
                            <td style="text-align: right;">{{ wallet.confirmedBalance|satoshiToMilliBtc }}
                                <small>mBTC</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Unconfirmed</td>
                            <td style="text-align: right;">{{ wallet.unconfirmedBalance|satoshiToMilliBtc }}
                                <small>mBTC</small>
                            </td>
                        </tr>
                        <tr>
                            <td>In Channels:</td>
                            <td style="text-align: right;">{{ channelBalance|satoshiToMilliBtc }}
                                <small>mBTC</small>
                            </td>
                        </tr>
                        <tr>
                            <td>Total</td>
                            <td style="text-align: right;">{{ (wallet.totalBalance + channelBalance)|satoshiToMilliBtc }}
                                <small>mBTC</small>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                    <div class="card-text">
                        <a href="#" class="btn btn-link">Widthdraw</a>
                        <a href="#" class="btn btn-link">Deposit</a>
                    </div>
                </div>
        </div>

        <hr>

            <div class="card">
                <div class="card-header">Invoices</div>
                <table class="table" style="table-layout: fixed; width: 100%;">
                    <tbody>
                    {% for invoice in pendingInvoices %}
                        <tr>
                            <td>{{ invoice.creationDate|date("d.m.Y H:i") }}</td>
                            <td>{{ (invoice.value  / 100000)|round(2) }}
                                <small>mBTC</small>
                            </td>
                            <td>{{ invoice.memo }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        new Chart(document.getElementById("channel-chart"), {
            "type": "bar",
            "data": {
                "labels": {{ channelDatasets.labels|json_encode|raw }},
                "datasets": [{
                    "label": "Local Balance",
                    "data": {{ channelDatasets.local|json_encode|raw }},
                    "fill": false,
                    "backgroundColor": {{ channelDatasets.local_background|json_encode|raw }},
                    "borderColor": {{ channelDatasets.local_border|json_encode|raw }},
                    "borderWidth": 1
                },
                    {
                        "label": "Remote Balance",
                        "data": {{ channelDatasets.remote|json_encode|raw }},
                        "fill": false,
                        "backgroundColor": {{ channelDatasets.remote_background|json_encode|raw }},
                        "borderColor": {{ channelDatasets.remote_border|json_encode|raw }},
                        "borderWidth": 1
                    }
                ]
            },
            "options": {
                "maintainAspectRatio": false,
                "scales": {
                    "yAxes": [{
                        "ticks": {
                            "beginAtZero": true,
                            "callback": function (value) {
                                return value.toLocaleString("en-US", "latn", {
                                    "style": "decimal",
                                }) + " mBTC";
                            }
                        },
                        "stacked": true
                    }],
                    "xAxes": [{
                        "stacked": true
                    }]
                }
            }
        });
    </script>
{% endblock %}